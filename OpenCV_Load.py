# -*- coding: utf-8 -*-
"""OpenCV_Load

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1IXr27d3mUC7Qe6oHh4YGfmUnn832rh6t
"""

import cv2
import numpy as np
import matplotlib.pyplot as plt
from google.colab.patches import cv2_imshow

img = cv2.imread('/image/peter.jpg', cv2.IMREAD_GRAYSCALE)
#IMREAD_COLOR = 1
#IMREAD_UNCHANGED = -1

#cv2_imshow(img)
#cv2.waitKey(0)
#cv2.destroyAllWindows()

plt.imshow(img, cmap='gray', interpolation='bicubic')
plt.plot([50, 100], [80, 100], 'c', linewidth = 5)
plt.show()

cv2.imwrite('/image/petergray.png', img)

import cv2
import numpy as np
#from google.colab.patches import cv2_imshow

cap = cv2.VideoCapture(0)
#fourcc = cv2.VideoWriter_fourcc(*'XVID')
#out = cv2.VideoWriter('/image/output.avi', fourcc, 20.0, (640, 480))
while True:
  ret, frame = cap.read()
  #gray = cv2.cvtColor(frame, cv2.COLOR_BGR2GRAY)
  #out.write(frame)
  cv2.imshow('frame', frame)
  #cv2_imshow(gray)

  if cv2.waitKey(1) & 0xFF == ord('q'):
    break

cap.release()
#out.release()
cv2.destroyAllWindows()

import numpy as np
from google.colab.patches import cv2_imshow

img = cv2.imread('/image/peter.jpg', cv2.IMREAD_COLOR)

cv2.line(img, (0,0), (150,150), (255,255,255), 15)
cv2.rectangle(img, (15,25), (200,150), (0,255,0), 5)
cv2.circle(img, (100,63), 55, (0,0,255), -1)

pts = np.array([[10,5], [20,30], [70,20], [50,10]], np.int32)
cv2.polylines(img, [pts], True, (0,255,255), 5)

font = cv2.FONT_HERSHEY_SIMPLEX
cv2.putText(img, 'OpenCV Tuts!', (0, 130), font, 1, (200,255,255), 2, cv2.LINE_AA)

cv2_imshow(img)
cv2.waitKey(0)
cv2.destroyAllWindows()

import numpy as np
from google.colab.patches import cv2_imshow

img = cv2.imread('/image/peter.jpg', cv2.IMREAD_COLOR)

img[55, 55] = [255, 255, 255]
px = img[55, 55]

img[100:300, 100:300] = [255, 255, 0]

#peter_face = img[300:600, 300:600]
#img[0:300, 0:300] = peter_face
cv2_imshow(img)
cv2.waitKey(0)
cv2.destroyAllWindows()

import numpy as np
from google.colab.patches import cv2_imshow

img1 = cv2.imread('/image/3D-Matplotlib.png')
#img2 = cv2.imread('/image/mainsvmimage.png')
img2 = cv2.imread('/image/mainlogo.png')

rows,cols,channels = img2.shape
roi = img1[0:rows, 0:cols]

img2gray = cv2.cvtColor(img2, cv2.COLOR_BGR2GRAY)
ret, mask = cv2.threshold(img2gray, 220, 255, cv2.THRESH_BINARY_INV)

mask_inv = cv2.bitwise_not(mask)

img1_bg = cv2.bitwise_and(roi, roi, mask=mask_inv)
img2_fg = cv2.bitwise_or(img2, img2, mask=mask)

dst = cv2.add(img1_bg, img2_fg)
img1[0:rows,0:cols] = dst

cv2_imshow(img1)
cv2_imshow(img2)
cv2_imshow(img2_fg)
cv2_imshow(img1)
cv2_imshow(img2)
cv2.waitKey(0)
cv2.destroyAllWindows

import numpy as np
from google.colab.patches import cv2_imshow

img = cv2.imread('/image/bookpage.jpg')

retval, threshold = cv2.threshold(img, 12, 255, cv2.THRESH_BINARY)

grayscaled = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)
retval2, threshold2 = cv2.threshold(grayscaled, 12, 255, cv2.THRESH_BINARY)
gaus = cv2.adaptiveThreshold(grayscaled, 255, cv2.ADAPTIVE_THRESH_GAUSSIAN_C, cv2.THRESH_BINARY, 115, 1)
retval2,otsu = cv2.threshold(grayscaled,125,255,cv2.THRESH_BINARY+cv2.THRESH_OTSU)

cv2_imshow(img)
cv2_imshow(threshold)
cv2_imshow(threshold2)
cv2_imshow(gaus)
cv2_imshow(otsu)
cv2.waitKey(0)
cv2.destroyAllWindows()

import numpy as np
from google.colab.patches import cv2_imshow

#cap = cv2.VideoCapture(0)

while True:
  frame = cv2.imread('/image/redtomato.jpg')
  hsv = cv2.cvtColor(frame, cv2.COLOR_BGR2HSV)

  lower_red = np.array([130,0,0])
  upper_red = np.array([150, 255, 255])

  mask = cv2.inRange(hsv, lower_red, upper_red)
  res = cv2.bitwise_and(frame, frame, mask = mask)

  cv2_imshow(frame)
  cv2_imshow(mask)
  cv2_imshow(res)

  k = cv2.waitKey(5) & 0xFF
  if k == 27:
    break

cv2.destroyAllWindows()
cap.release()